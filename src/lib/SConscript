# PARTIO SOFTWARE
# Copyright 2010 Disney Enterprises, Inc. All rights reserved
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
# * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in
# the documentation and/or other materials provided with the
# distribution.
# 
# * The names "Disney", "Walt Disney Pictures", "Walt Disney Animation
# Studios" or the names of its contributors may NOT be used to
# endorse or promote products derived from this software without
# specific prior written permission from Walt Disney Pictures.
# 
# Disclaimer: THIS SOFTWARE IS PROVIDED BY WALT DISNEY PICTURES AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE, NONINFRINGEMENT AND TITLE ARE DISCLAIMED.
# IN NO EVENT SHALL WALT DISNEY PICTURES, THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND BASED ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

import os


Import('env variant_build_abs variant_install_abs GetInstallPath')

#env.Append(CXXFLAGS=["-I%s/include"%os.environ["RP_SeExpr"]])
#env.Append(LINKFLAGS=["-I%s/lib"%os.environ["RP_SeExpr"]])
env.Append(LIBS=["z"])
if env["mac"]:
    #env.Append(CXXFLAGS=["-m32"])
    pass


env.Append(CXXFLAGS=["-I/opt/local/include","-pthread"])
env.Append(LINKFLAGS=["-pthread"])
dir=Dir(".").srcnode().abspath

def cppFiles(basePath):
    #print("test %s"%os.getcwd())
    return [os.path.join(basePath,x) for x in os.listdir(basePath) if x.endswith(".cpp")]


files=cppFiles(os.path.join(dir,"core"))+cppFiles(os.path.join(dir,"io"))
lib=env.Library("partio",files)
foo=Dir(".").abspath+"../../include"

env.Install(variant_build_abs+"/include","Partio.h")
env.Install(variant_build_abs+"/include","PartioIterator.h")
env.Install(variant_build_abs+"/include","PartioAttribute.h")
env.Install(variant_build_abs+"/lib",lib)

core_targets = [
    env.Install(variant_install_abs+"/include","Partio.h"),
    env.Install(variant_install_abs+"/include","PartioIterator.h"),
    env.Install(variant_install_abs+"/include","PartioAttribute.h"),
    env.Install(variant_install_abs+"/lib",lib)
]


env.Alias('core', core_targets )
